---
import siteConfig from '../data/site-config';
import Button from './Button.astro';

const subscribe = siteConfig.subscribe;
const BUTTONDOWN_API_KEY = '6f27e4a2-be97-4189-9862-1f3c74225c3a';

const { class: className } = Astro.props;
---

{
    subscribe?.formUrl && (
        <section class:list={['px-8 py-12 flex flex-col items-center rounded-lg bg-white/33 text-center sm:px-12 sm:py-16 shadow-md transition-all duration-200 hover:shadow-lg', className]}>
            {subscribe.title && (
                <h2 class:list={['w-full max-w-xl text-2xl leading-tight font-serif font-medium sm:text-4xl', subscribe.text ? 'mb-4' : 'mb-8']}>
                    {subscribe.title}
                </h2>
            )}
            {subscribe.text && <p class="w-full max-w-xl mb-8 text-sm leading-normal">{subscribe.text}</p>}
            <form id="subscribe-form" name="subscribe-form" class="w-full max-w-xl flex flex-col gap-3.5 sm:flex-row" data-api-key={BUTTONDOWN_API_KEY}>
                <label for="email" class="sr-only">
                    Email Address
                </label>
                <input
                    type="email"
                    name="email"
                    id="email"
                    class="w-full h-9 px-5 py-2 text-sm text-main bg-transparent border rounded-full placeholder:text-main/60 focus:outline-hidden"
                    required=""
                    value=""
                    placeholder="Your email"
                />
                <!-- Honeypot field -->
                <input
                    type="text"
                    name="website"
                    id="website"
                    class="hidden"
                    autocomplete="off"
                    tabindex="-1"
                />
                <Button type="submit" name="subscribe" class="w-full h-9 sm:w-auto">
                    Subscribe
                </Button>
            </form>
            <div id="subscribe-message" class="hidden mt-4 text-sm" />
        </section>
    )
}

<script>
    document.addEventListener('astro:page-load', () => {
        const form = document.getElementById('subscribe-form') as HTMLFormElement;
        const message = document.getElementById('subscribe-message');
        const emailInput = document.querySelector('input[name="email"]') as HTMLInputElement;
        const submitButton = form?.querySelector('button[type="submit"]') as HTMLButtonElement;
        const apiKey = form?.dataset.apiKey;

        if (form && message && emailInput && submitButton && apiKey) {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                // Check honeypot
                const honeypot = form.querySelector('input[name="website"]') as HTMLInputElement;
                if (honeypot && honeypot.value) {
                    message.textContent = 'Invalid submission.';
                    message.classList.remove('hidden');
                    message.classList.add('text-red-600');
                    return;
                }

                const email = emailInput.value;
                const originalButtonText = submitButton.textContent;

                // Disable the button and show loading state
                submitButton.disabled = true;
                submitButton.textContent = 'Subscribing...';

                try {
                    const response = await fetch('https://api.buttondown.com/v1/subscribers', {
                        method: 'POST',
                        headers: {
                            Authorization: `Token ${apiKey}`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            email_address: email,
                            tags: ['website-subscriber'],
                            referrer_url: window.location.href,
                            notes: 'Subscribed via website form'
                        })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        message.textContent = 'Thanks for subscribing! Please check your email to confirm your subscription.';
                        message.classList.remove('hidden');
                        message.classList.add('text-green-600');
                        form.reset();
                    } else if (response.status === 400 && data.detail?.includes('already subscribed')) {
                        message.textContent = "You're already subscribed!";
                        message.classList.remove('hidden');
                        message.classList.add('text-yellow-600');
                    } else {
                        console.error('Subscription error:', data);
                        message.textContent = data.detail || 'Subscription failed';
                        message.classList.remove('hidden');
                        message.classList.add('text-red-600');
                    }
                } catch (error) {
                    message.textContent = 'Something went wrong. Please try again.';
                    message.classList.remove('hidden');
                    message.classList.add('text-red-600');
                } finally {
                    // Re-enable the button and restore original text
                    submitButton.disabled = false;
                    submitButton.textContent = originalButtonText;
                }
            });
        }
    });
</script>
